import{s as h,e as p,k as m,d as v,u as S,g as w,h as N}from"./scheduler.4f657698.js";import{S as g,i as b,d,v as j,j as y,k as E,l as k,g as _,m as f,a as C,f as O,t as P}from"./index.827e7fb6.js";const R="C:/OpenServer/domains/the-nepodarok-github/src/lib/components/compositional/Section.svelte";function u(o){let e,c,a;const l=o[2].default,s=p(l,o,o[1],null),r={c:function(){e=y("section"),s&&s.c(),this.h()},l:function(n){e=E(n,"SECTION",{class:!0});var i=k(e);s&&s.l(i),i.forEach(_),this.h()},h:function(){f(e,"class",c=m(o[0])+" s-JrAPRxqbIDGV"),v(e,R,4,0,50)},m:function(n,i){C(n,e,i),s&&s.m(e,null),a=!0},p:function(n,[i]){s&&s.p&&(!a||i&2)&&S(s,l,n,n[1],a?N(l,n[1],i,null):w(n[1]),null),(!a||i&1&&c!==(c=m(n[0])+" s-JrAPRxqbIDGV"))&&f(e,"class",c)},i:function(n){a||(O(s,n),a=!0)},o:function(n){P(s,n),a=!1},d:function(n){n&&_(e),s&&s.d(n)}};return d("SvelteRegisterBlock",{block:r,id:u.name,type:"component",source:"",ctx:o}),r}function q(o,e,c){let{$$slots:a={},$$scope:l}=e;j("Section",a,["default"]);let{className:s}=e;o.$$.on_mount.push(function(){s===void 0&&!("className"in e||o.$$.bound[o.$$.props.className])&&console.warn("<Section> was created without expected prop 'className'")});const r=["className"];return Object.keys(e).forEach(t=>{!~r.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Section> was created with unknown prop '${t}'`)}),o.$$set=t=>{"className"in t&&c(0,s=t.className),"$$scope"in t&&c(1,l=t.$$scope)},o.$capture_state=()=>({className:s}),o.$inject_state=t=>{"className"in t&&c(0,s=t.className)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),[s,l,a]}class A extends g{constructor(e){super(e),b(this,e,q,u,h,{className:0}),d("SvelteRegisterComponent",{component:this,tagName:"Section",options:e,id:u.name})}get className(){throw new Error("<Section>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set className(e){throw new Error("<Section>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{A as S};
